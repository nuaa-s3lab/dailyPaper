(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{691:function(e,t,n){e.exports=n.p+"assets/img/1.443f092e.png"},692:function(e,t,n){e.exports=n.p+"assets/img/2.ab7bac73.png"},693:function(e,t,n){e.exports=n.p+"assets/img/3.8e4f97bf.png"},694:function(e,t,n){e.exports=n.p+"assets/img/4.831db654.png"},695:function(e,t,n){e.exports=n.p+"assets/img/5.ab998867.png"},696:function(e,t,n){e.exports=n.p+"assets/img/6.2016a097.png"},762:function(e,t,n){"use strict";n.r(t);var s=n(6),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("大家好，今天我为大家带来了来自"),s("em",[e._v("USENIX ATC 2017")]),e._v(" 的《PANOPLY: Low-TCB Linux Applications with SGX Enclaves》。\n"),s("img",{attrs:{src:n(691)+"#pic_center",alt:"title"}})]),e._v(" "),s("p",[e._v("同Graphene-SGX的设计一样，在Linux下，PLNOPLY将优化SGX的目标锁定在三个方面：")]),e._v(" "),s("ol",[s("li",[e._v("在SGX本地抽象与Linux标准抽象之间建立桥梁——Micron")]),e._v(" "),s("li",[e._v("定义不同micron之间的信息传递"),s("strong",[e._v("协议")]),e._v("，以防止OS恶意篡改数据")]),e._v(" "),s("li",[e._v("Low TCB")])]),e._v(" "),s("p",[e._v("PLNOPLY中定义了一个微容器Micron，其中装载的是SGX的enclave中"),s("code",[e._v("分离的代码和数据")]),e._v("。每个Micron都被编译为一个库包(e.g. micron-A.so)，它包含了PANOPLY 填充"),s("code",[e._v("（shim）库")]),e._v(", "),s("code",[e._v("the Intel SDK库")]),e._v("以及"),s("code",[e._v("其他被使用的库")]),e._v("。而至于有多少个Micron被创建以及哪些代码运行在哪个Micron中，都需要开发者自己输入注释（"),s("code",[e._v("annotation")]),e._v("）。程序运行过程中，Micron之间进行的参数传递、返回返回值等都遵循作者们定义的几个协议。Micron之内的"),s("strong",[e._v("系统调用")]),e._v("在shim库中被准确"),s("strong",[e._v("重定向")]),e._v("到Linux中，至于多线程，多进程，事件管理等操作，PANOPLY使用"),s("em",[e._v("delegate-rather-than-emulate")]),e._v(" 策略以Micron为基础重写了实现，至于实现的细节这里不做描述。")]),e._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[e._v("文章给出了一个例子让读者更好的理解恶意OS如何破坏程序执行，以及引出PANOPLY设计的意义：")]),e._v(" "),s("p",[s("img",{attrs:{src:n(692)+"#pic_center",alt:"例子"}})]),e._v(" "),s("p",[s("code",[e._v("FreeTDS")]),e._v("：使用"),s("code",[e._v("OpenSSL SSL/TLS")]),e._v("库与远程数据库建立安全通道。"),s("code",[e._v("FreeTDS")]),e._v("（上图左侧）在连接远程数据库时，需要连接证书管理器服务期（上图右侧，trusted），而在消息传递期间，可能被OS（untrusted）攻击，从而造成不必要的损失。")]),e._v(" "),s("p",[e._v("引出PANOPLY：以前的一些工作重点在私钥的机密性和经过身份验证的数据传递，而我们的重点是保护端到端应用程序语义。简单来说，就是"),s("code",[e._v("在SGX中支持丰富的OS抽象以以及低TCB")]),e._v("。")])]),e._v(" "),s("p",[e._v("架构概要：\n"),s("img",{attrs:{src:n(693)+"#pic_center",alt:"architecture"}})]),e._v(" "),s("p",[e._v("系统概要：\n"),s("img",{attrs:{src:n(694)+"#pic_center",alt:"system"}})]),e._v(" "),s("p",[e._v("Micron初始化：\n输入：程序源码+注释（注明函数应该运行在单独的Micron中）\n①\t将输入处理后转换成二进制文件，作为初始化Micron（s）的输入\n②\t初始化Micron(s)并返回一个唯一值，在shim中维护这个唯一值，并且返回一个随机数构成映射")]),e._v(" "),s("p",[e._v("Micron之间的交互协议："),s("strong",[e._v("维护流完整性")]),e._v(" "),s("em",[e._v("1.\tConﬁdentiality & Integrity\n2.\tSender / Receiver Authentication\n3.\tMessage Freshness\n4.\tReliable Delivery")])]),e._v(" "),s("p",[e._v("使用四个基准程序："),s("code",[e._v("Tor H2O OpenSSL FreeTDS")])]),e._v(" "),s("p",[s("img",{attrs:{src:n(695)+"#pic_center",alt:"bench"}})]),e._v(" "),s("p",[e._v("对比Graphene-SGX：")]),e._v(" "),s("ol",[s("li",[e._v("TCB比其小一个数量级")]),e._v(" "),s("li",[e._v("更大的吞吐率")]),e._v(" "),s("li",[e._v("更低的时延")]),e._v(" "),s("li",[e._v("更大的带宽\n"),s("img",{attrs:{src:n(696)+"#pic_center",alt:"compare"}})])]),e._v(" "),s("ul",[s("li",[e._v("Info: "),s("a",{attrs:{href:"https://www.ndss-symposium.org/ndss2017/ndss-2017-programme/panoply-low-tcb-linux-applications-sgx-enclaves/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.ndss-symposium.org/ndss2017/ndss-2017-programme/panoply-low-tcb-linux-applications-sgx-enclaves/"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("source code: "),s("a",{attrs:{href:"https://github.com/shwetasshinde24/Panoply",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/shwetasshinde24/Panoply"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=r.exports}}]);